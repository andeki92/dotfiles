---
description: 
globs: 
alwaysApply: true
---
# Homebrew and Brewfile Guidelines

## Overview

Homebrew is the package manager for macOS and Linux. Brewfile provides a declarative way to manage packages, casks, and Mac App Store applications.

## Installation

```bash
# macOS/Linux
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
```

## Brewfile Location

In our dotfiles repository, the Brewfile is at:

```
config/brew/Brewfile  # becomes ~/.brew/Brewfile when stowed
```

## Brewfile Structure

```ruby
# Taps
tap "homebrew/bundle"
tap "homebrew/cask"
tap "homebrew/cask-fonts"

# Core packages
brew "git"
brew "stow"
brew "mise"
brew "nvim"

# Optional flags
brew "postgresql@15", restart_service: true
brew "python@3.12", link: true

# macOS applications
cask "alacritty"
cask "firefox"

# Fonts
cask "font-fira-code-nerd-font"

# Mac App Store applications
mas "Amphetamine", id: 937984704
```

## Usage

### Installing Packages

```bash
# Install all packages in Brewfile
brew bundle --file=~/.brew/Brewfile

# Install without upgrading existing packages
brew bundle --file=~/.brew/Brewfile --no-upgrade
```

### Creating/Updating a Brewfile

```bash
# Create a Brewfile from installed packages
brew bundle dump --file=~/.dotfiles/config/brew/Brewfile

# Force overwrite an existing Brewfile
brew bundle dump --file=~/.dotfiles/config/brew/Brewfile --force
```

### Checking Status

```bash
# Check if all dependencies are installed
brew bundle check --file=~/.brew/Brewfile

# List all dependencies in the Brewfile
brew bundle list --file=~/.brew/Brewfile
```

### Cleanup

```bash
# Remove packages not in Brewfile (dry run)
brew bundle cleanup --file=~/.brew/Brewfile

# Actually remove packages not in Brewfile
brew bundle cleanup --file=~/.brew/Brewfile --force
```

## Best Practices

### Organization

Keep your Brewfile organized by logical categories with comments:

```ruby
# Programming Languages
brew "node"
brew "python"

# Development Tools
brew "git"
brew "docker"
```

### Platform-Specific Configurations

For cross-platform compatibility:

```ruby
# Shared packages
brew "git"
brew "zsh"

# macOS-specific
if OS.mac?
  brew "mas"
  cask "iterm2"
end

# Linux-specific
if OS.linux?
  brew "xclip"
end
```

### Shell Aliases

Add to your shell configuration:

```bash
# Add to .zshrc or similar
alias brewup="brew update && brew upgrade && brew cleanup"
alias brewdump="brew bundle dump --file=~/.dotfiles/config/brew/Brewfile --force"
alias brewinstall="brew bundle --file=~/.brew/Brewfile"
```
