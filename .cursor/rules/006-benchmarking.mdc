---
description: 
globs: 
alwaysApply: true
---
# Zsh Startup Benchmarking

## Purpose

This rule provides guidance on measuring zsh startup time to ensure configuration changes don't negatively impact performance.

## Simple Benchmarking

We use a single benchmark script that focuses on measuring zsh startup time:

```bash
# Run a benchmark
./scripts/benchmark.sh

# Run and save the results
./scripts/benchmark.sh --save
```

## Benchmark Results

The script runs multiple tests and calculates an average for more consistent results:

```
‚è±Ô∏è  Measuring zsh startup time
===========================
Running 5 tests...
  Test 1: 0.131s
  Test 2: 0.128s
  Test 3: 0.126s
  Test 4: 0.130s
  Test 5: 0.129s

üîç Results:
  Date: 2025-01-03
  Average startup time: 0.129s
  Compared to last: 0.024s faster ‚úÖ
```

## Recording Benchmarks

When using the `--save` option, benchmark results are saved to `docs/benchmarks.md` in a table format:

```markdown
# Zsh Startup Benchmarks

| Date | Description | Time |
|------|-------------|------|
| 2025-01-01 | Initial configuration | 0.153s |
| 2025-01-03 | After cleanup | 0.129s |
```

This provides a historical record of zsh performance as configurations change.

## When to Benchmark

Run benchmarks:

1. Before making significant zsh configuration changes (establish baseline)
2. After making changes (measure impact)
3. Periodically to track performance over time

## Best Practices

1. Run benchmarks multiple times for consistency
2. Always add descriptive comments when saving benchmarks
3. Be mindful of other processes that might affect benchmark results
4. Document significant improvements or regressions in commit messages
