---
description: 
globs: 
alwaysApply: true
---
# Community Dotfiles Research

## Purpose

Provide guidance on researching and adopting best practices from the dotfiles community.

## Key Resources

Before implementing major changes, research popular dotfiles repositories:

- [GitHub Topic: Dotfiles](mdc:https:/github.com/topics/dotfiles)
- [GitHub Topic: GNU Stow](mdc:https:/github.com/topics/gnu-stow)
- [Awesome Dotfiles](mdc:https:/github.com/webpro/awesome-dotfiles)
- [r/unixporn](mdc:https:/www.reddit.com/r/unixporn)
- [r/commandline](mdc:https:/www.reddit.com/r/commandline)

## Focus Areas

When studying community repositories, focus on:

1. **Organizational Patterns**
   - Directory structures
   - Naming conventions
   - Stow/chezmoi/mise usage patterns

2. **Cross-Platform Solutions**
   - macOS vs Linux differences
   - WSL-specific considerations

3. **Tool-Specific Configurations**
   - XDG compliance implementation
   - Plugin management
   - Performance optimizations

4. **Bootstrapping & Installation**
   - Automated setup scripts
   - First-time installation workflows
   - Update mechanisms

## Integration Process

When adopting community patterns:

1. **Evaluate Compatibility**
   - Does it fit our modular structure?
   - Does it maintain XDG compliance?
   - Does it work across our target platforms?

2. **Adapt, Don't Copy**
   - Extract principles and patterns, not exact implementations
   - Adapt to our specific requirements
   - Document sources and inspirations

3. **Test Thoroughly**
   - Test on all target platforms
   - Measure performance impact
   - Ensure reversibility of changes

## Example Research Workflow

For enhancing Neovim configuration:

```bash
# Search for inspiration
web_search "dotfiles neovim XDG stow"

# Follow promising repositories
mcp_fetch_fetch {url: "https://github.com/username/dotfiles/tree/main/nvim"}

# Extract patterns that align with our philosophy
```
